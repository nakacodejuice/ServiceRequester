//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.dataexchange.org", ConfigurationName="ServiceReference1.DataExchangeSoapBinding")]
    public interface DataExchangeSoapBinding {
        
        // CODEGEN: Контракт генерации сообщений с операцией ВыполнитьАлгоритмИПолучитьРезультат не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action="ВыполнитьАлгоритмИПолучитьРезультат", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1 ВыполнитьАлгоритмИПолучитьРезультат(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ВыполнитьАлгоритмИПолучитьРезультат", ReplyAction="*")]
        System.Threading.Tasks.Task<TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1> ВыполнитьАлгоритмИПолучитьРезультатAsync(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dataexchange.org")]
    public partial class ВыполнитьАлгоритмИПолучитьРезультат : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string идентификаторField;
        
        private string параметрыАлгоритмаField;
        
        private System.Nullable<bool> сжиматьРезультатField;
        
        private bool сжиматьРезультатFieldSpecified;
        
        private System.Nullable<bool> режимОтладкиField;
        
        private bool режимОтладкиFieldSpecified;
        
        private System.Nullable<bool> jSONField;
        
        private bool jSONFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Идентификатор {
            get {
                return this.идентификаторField;
            }
            set {
                this.идентификаторField = value;
                this.RaisePropertyChanged("Идентификатор");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ПараметрыАлгоритма {
            get {
                return this.параметрыАлгоритмаField;
            }
            set {
                this.параметрыАлгоритмаField = value;
                this.RaisePropertyChanged("ПараметрыАлгоритма");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<bool> СжиматьРезультат {
            get {
                return this.сжиматьРезультатField;
            }
            set {
                this.сжиматьРезультатField = value;
                this.RaisePropertyChanged("СжиматьРезультат");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool СжиматьРезультатSpecified {
            get {
                return this.сжиматьРезультатFieldSpecified;
            }
            set {
                this.сжиматьРезультатFieldSpecified = value;
                this.RaisePropertyChanged("СжиматьРезультатSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<bool> РежимОтладки {
            get {
                return this.режимОтладкиField;
            }
            set {
                this.режимОтладкиField = value;
                this.RaisePropertyChanged("РежимОтладки");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool РежимОтладкиSpecified {
            get {
                return this.режимОтладкиFieldSpecified;
            }
            set {
                this.режимОтладкиFieldSpecified = value;
                this.RaisePropertyChanged("РежимОтладкиSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<bool> JSON {
            get {
                return this.jSONField;
            }
            set {
                this.jSONField = value;
                this.RaisePropertyChanged("JSON");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JSONSpecified {
            get {
                return this.jSONFieldSpecified;
            }
            set {
                this.jSONFieldSpecified = value;
                this.RaisePropertyChanged("JSONSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dataexchange.org")]
    public partial class ВыполнитьАлгоритмИПолучитьРезультатResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string выполнитьАлгоритмИПолучитьРезультатResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string ВыполнитьАлгоритмИПолучитьРезультатResult {
            get {
                return this.выполнитьАлгоритмИПолучитьРезультатResultField;
            }
            set {
                this.выполнитьАлгоритмИПолучитьРезультатResultField = value;
                this.RaisePropertyChanged("ВыполнитьАлгоритмИПолучитьРезультатResult");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ВыполнитьАлгоритмИПолучитьРезультат1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.dataexchange.org", Order=0)]
        public TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат ВыполнитьАлгоритмИПолучитьРезультат;
        
        public ВыполнитьАлгоритмИПолучитьРезультат1() {
        }
        
        public ВыполнитьАлгоритмИПолучитьРезультат1(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат ВыполнитьАлгоритмИПолучитьРезультат) {
            this.ВыполнитьАлгоритмИПолучитьРезультат = ВыполнитьАлгоритмИПолучитьРезультат;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ВыполнитьАлгоритмИПолучитьРезультатResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.dataexchange.org", Order=0)]
        public TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse ВыполнитьАлгоритмИПолучитьРезультатResponse;
        
        public ВыполнитьАлгоритмИПолучитьРезультатResponse1() {
        }
        
        public ВыполнитьАлгоритмИПолучитьРезультатResponse1(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse ВыполнитьАлгоритмИПолучитьРезультатResponse) {
            this.ВыполнитьАлгоритмИПолучитьРезультатResponse = ВыполнитьАлгоритмИПолучитьРезультатResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataExchangeSoapBindingChannel : TestService.ServiceReference1.DataExchangeSoapBinding, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataExchangeSoapBindingClient : System.ServiceModel.ClientBase<TestService.ServiceReference1.DataExchangeSoapBinding>, TestService.ServiceReference1.DataExchangeSoapBinding {
        
        public DataExchangeSoapBindingClient() {
        }
        
        public DataExchangeSoapBindingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataExchangeSoapBindingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeSoapBindingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeSoapBindingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1 TestService.ServiceReference1.DataExchangeSoapBinding.ВыполнитьАлгоритмИПолучитьРезультат(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 request) {
            return base.Channel.ВыполнитьАлгоритмИПолучитьРезультат(request);
        }
        
        public TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse ВыполнитьАлгоритмИПолучитьРезультат(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат ВыполнитьАлгоритмИПолучитьРезультат1) {
            TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 inValue = new TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1();
            inValue.ВыполнитьАлгоритмИПолучитьРезультат = ВыполнитьАлгоритмИПолучитьРезультат1;
            TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1 retVal = ((TestService.ServiceReference1.DataExchangeSoapBinding)(this)).ВыполнитьАлгоритмИПолучитьРезультат(inValue);
            return retVal.ВыполнитьАлгоритмИПолучитьРезультатResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1> TestService.ServiceReference1.DataExchangeSoapBinding.ВыполнитьАлгоритмИПолучитьРезультатAsync(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 request) {
            return base.Channel.ВыполнитьАлгоритмИПолучитьРезультатAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультатResponse1> ВыполнитьАлгоритмИПолучитьРезультатAsync(TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат ВыполнитьАлгоритмИПолучитьРезультат) {
            TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1 inValue = new TestService.ServiceReference1.ВыполнитьАлгоритмИПолучитьРезультат1();
            inValue.ВыполнитьАлгоритмИПолучитьРезультат = ВыполнитьАлгоритмИПолучитьРезультат;
            return ((TestService.ServiceReference1.DataExchangeSoapBinding)(this)).ВыполнитьАлгоритмИПолучитьРезультатAsync(inValue);
        }
    }
}
